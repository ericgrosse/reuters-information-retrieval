Pre-requisites
	Python compatible with version 2.7.10
	Need to run "pip install beautifulsoup4" in the terminal to have the BeautifulSoup module

Project structure
	generated-files: Files generated by main.py go here
	supporting-files: This contains a stopwords list and an AFINN dictionary
	test-input: Test input files (only used when PRODUCTION_MODE = False in main.py)
	test-output: Test output files (only used when PRODUCTION_MODE = False in main.py)
	web-documents: Contains the resulting directories from web crawling Concordia's ENCS departments
	main.py: The project's only script, run this to perform the sentiment analysis

Running the script gives the following aggregate results:

===

Department Sentiment Scores:

bcee: 12.3789841092
electrical-computer: 8.44125299424
mechanical-industrial: 8.25756119814
info-systems-eng: 6.3748156845
computer-science-software-engineering: 6.1042553948
eng-society: 1.91872101729

===

For each department, the score of each individual document is given by the files in the generated-files folder. Below is a sample result from the file corresponding to the 
department of building, civil and environmental engineering (BCEE):

===

['web-documents\\bcee\\about\\faculty.html', 0.017236453031245175]
['web-documents\\bcee\\about\\jobs.html', 0.42812782834829627]
['web-documents\\bcee\\about\\staff.html', 0.24286292013645044]
['web-documents\\bcee\\about.html', 0.2667581035456326]
['web-documents\\bcee\\contact.html', 0.29771165275668027]
['web-documents\\bcee\\cuevents\\main\\2014\\11\\17\\cinema-politica-moug.html', 0.3442325424741365]
['web-documents\\bcee\\cuevents\\main\\2015\\01\\31\\speculations-risquer-linterpretation.html', 0.09751321935466284]
['web-documents\\bcee\\cunews\\encs\\bcee\\2013\\09\\18\\hon-mention-stephan-g-revay-award.html', 0.9499107125893276]
['web-documents\\bcee\\cunews\\encs\\bcee\\2013\\09\\23\\athienitis-awarded-senior-nserc-industrial-research-chair.html', 0.5944270325840932]
['web-documents\\bcee\\cunews\\main\\stories\\2014\\10\\03\\university-flagsathalfmastonsaturdayoctober4.html', 0.36828478186799357]
['web-documents\\bcee\\facilities-services\\lab-safety.html', 0.316039494270389]
['web-documents\\bcee\\facilities-services\\research-labs.html', 0.338995728367315]
['web-documents\\bcee\\facilities-services\\teaching-labs.html', 0.2820256132181337]
['web-documents\\bcee\\facilities-services.html', 0.32736425054932755]
['web-documents\\bcee\\faculty.html', 0.43016024948654746]
['web-documents\\bcee\\news\\notices.html', 0.8544971399438157]
['web-documents\\bcee\\news\\notices.html.html', 0.8544971399438157]
['web-documents\\bcee\\news.html', 0.5172211505397482]
['web-documents\\bcee\\programs\\building-engineering.html', 0.18528376961310086]
['web-documents\\bcee\\programs\\civil-engineering.html', 0.17169958085447118]
['web-documents\\bcee\\programs\\co-op.html', 0.37340996946508875]
['web-documents\\bcee\\programs\\environmental-engineering.html', 0.14979423549925036]
['web-documents\\bcee\\programs\\graduate.html', 0.3491826488754647]
['web-documents\\bcee\\programs\\undergraduate.html', 0.37808796356889585]
['web-documents\\bcee\\programs.html', 0.10100444458065233]
['web-documents\\bcee\\research\\building-engineering.html', 0.3003794540662915]
['web-documents\\bcee\\research\\centres.html', 0.3726933110497927]
['web-documents\\bcee\\research\\civil-engineering.html', 0.27995850424776136]
['web-documents\\bcee\\research\\environmental-engineering.html', 0.2903433553447969]
['web-documents\\bcee\\research\\researchers.html', 0.025641907630754364]
['web-documents\\bcee\\research.html', 0.2539853566132516]
['web-documents\\bcee\\student-life\\associations.html', 0.29356568849990317]
['web-documents\\bcee\\student-life\\scholarships-awards.html', 0.5476908807539278]
['web-documents\\bcee\\student-life.html', 0.4172255118366955]
['web-documents\\bcee\\students.html', 0.361171513702378]

===

 For each document, the sentiment score is computed by the following function:

===

def sentiment(document, dictionaryPath):
    ''' Computes the sentiment score for a given document '''
    filenameAFINN = dictionaryPath
    afinn = dict(map(lambda (w, s): (w, int(s)), [
            ws.strip().split('\t') for ws in open(filenameAFINN) ]))
    pattern_split = re.compile(r"\W+")
    words = pattern_split.split(document.lower())
    sentiments = map(lambda word: afinn.get(word, 0), words)
    if sentiments:
        sentiment = float(sum(sentiments))/math.sqrt(len(sentiments))
    else:
        sentiment = 0
    return sentiment

===

Essentially, the function takes a document string and a filepath to an AFINN dictionary. Each word in the document string is compared to the AFINN dictionary and if it matches a word, the sentiment score of that word is added to a running total. Once the entire document string is processed, the final sentiment score is then divided by the square root of the number of sentiments found in the document (in order to normalize the results).

The output of this function is then divided by the number of terms in the document and multiplied by a constant scale factor (as another normalization measure).

===

scaleFactor = 100
sentimentScore = float( sentiment(docString, aFinn) * scaleFactor ) / float( len(words) )

===

We reason that if a document contains 22 terms and each term is positive, that document should have a higher sentiment score than a document containing 10,000 terms, 22 of which are positive. This normalization step also explains why the sentiment scores per document are so low, such as the following document-score pair:

['web-documents\\bcee\\about\\faculty.html', 0.017236453031245175]

Without the document length normalization, this document actually has a score of 24.07932488464951, which is 1397 times higher.

*******
Results
*******

Based on our results, we conclude that:

-The most positive department in ENCS at Concordia is the department of building, civil and environmental engineering (BCEE) [score of 12.3789841092]
-The department of computer science and software engineering is less positive than the department of electrical and computer engineering [score of 6.1042553948 < 8.44125299424]
-The departments rank as follows based on their sentiment scores:
	department of building, civil and environmental engineering
	department of electrical and computer engineering
	department of mechanical and industrial engineering
	department of information systems engineering
	department of computer science and software engineering
	centre for engineering and society
-Using the following arbitrary cutoff scoring classification:
	Positive: score >= 5
	Neutral: score > -5 and score < 5
	Negative: score <= -5
Every ENCS department would be classified as positive except for the centre for engineering and society, which would be classified as neutral
-TODO: Classify the mystery doc
	
	
	