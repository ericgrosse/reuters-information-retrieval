Since the project's generated files are so large, they were excluded from the moodle submission. In order to generate all the relevant files, run the following python files in the exact order described:

reuters_split.py (splits the 22 reuteurs files into 21,578 files)
reuters_tokenizer.py (generates an inverted index for the desired number of blocks)
reuters_merge.py (merges the inverted indexes of all the blocks into one file)
reuters_query.py (actually performs the query on the merged inverted index)

===

In terms of folder structure:

reuters-split: contains the 21,578 reuters files

inverted-index-<compressed, uncompressed>: contains the inverted index for each block. Notice there is both a default and "raw" version of each block file. The default version is a binary file that preserves the ordered dictionary data structure used. The raw version is a textual representation of the data that the user can view. Also note that you can change the number of desired blocks by changing the value of the numberOfBlocks variable in reuters_tokenizer.py.

inverted-index-result: The merged inverted index

reuters-test-input and reuters-test-output: This is used for testing purposes only.

.idea: A folder generated by the Pycharm IDE, this can be ignored

===

Note that in some of the python files, you will see the following config options:

PRODUCTION_MODE = True
compressing = True

PRODUCTION_MODE is set to false when running small tests, in which case you copy a few files into the reuters-test-input folder and view the result in the reuters-test-output folder.
If compressing is set to true, the generated files will be compressed (and their filename will indicate as much). Conversely, if compressing is set to false, the generated files will be uncompressed.

===

The project runs in the Pycharm IDE on a Windows environment. In theory, it should run on the lab machines so long as they support the following libraries:

nltk
fileinput
glob
re
collections
pickle
chain

===

In terms of deliverables, it is possible to query the Reuters collection by running the reuters_query.py file. It is not, however, possible to query more than one word at a time. I did not have time to write a project report or a three slide overview for my system. Everything I have missing in this deliverable will be provided in the lab demo itself.

===

Some sample queries

jimmy [12136, 13540, 17023, 18005, 19432, 20614]
carter [854, 965, 1988, 1993, 2534, 3380, 5465, 5525, 7052, 10252, 10987, 11114, 11118, 11330, 11489, 12136, 12677, 13540, 15158, 15473, 16887, 17023, 17325, 17363, 18005, 18438, 18962, 19432, 20614, 21308]
(Upon manual inspection, both words occur in document 12136, 13540, 17023, 18005, 19432 and 20614. This tells us that documents with the word jimmy always have carter, but not vice versa)

green [263, 275, 345, 1249, 1753, 1842, 2162, 2404, 2606, 2627, 3397, 3878, 3885, 4634, 4719, 5107, 5124, 5334, 6698, 7308, 7415, 8193, 8630, 9265, 9328, 10682, 10733, 10752, 10799, 12300, 12655, 12701, 12814, 12878, 13190, 13629, 14982, 16115, 17415, 17419, 17433, 18464, 19091, 19430, 19551, 19867, 19960, 20186, 20555, 21118, 21577]

party [28, 60, 219, 222, 226, 234, 308, 319, 337, 338, 428, 704, 871, 894, 967, 1129, 1183, 1477, 1594, 1683, 1685, 1880, 1900, 1906, 1916, 1957, 2074, 2132, 2228, 2364, 2406, 2467, 2556, 2786, 2823, 2965, 2967, 2972, 3188, 3205, 3313, 3451, 3488, 3502, 3549, 3567, 3597, 3670, 3796, 4026, 4070, 4096, 4166, 4247, 4548, 4670, 4674, 4705, 4721, 4736, 4738, 4854, 4887, 5030, 5070, 5117, 5161, 5190, 5208, 5221, 5262, 5289, 5325, 5338, 5511, 5622, 5774, 6052, 6143, 6156, 6188, 6190, 6285, 6345, 6360, 6395, 6396, 6400, 6430, 6899, 6927, 6945, 6989, 7022, 7043, 7137, 7477, 7525, 7536, 7549, 7630, 7651, 7777, 7779, 7849, 7927, 7941, 8073, 8091, 8133, 8139, 8307, 8342, 8405, 8450, 8493, 8496, 8627, 8691, 8727, 8884, 8904, 9108, 9126, 9140, 9153, 9183, 9247, 9275, 9292, 9402, 9466, 9479, 9482, 9689, 9739, 9761, 9774, 9797, 9847, 9848, 9907, 9921, 9929, 10123, 10210, 10230, 10268, 10271, 10290, 10355, 10374, 10379, 10398, 10486, 10621, 10646, 10666, 10863, 11172, 11175, 11176, 11243, 11245, 11397, 11442, 11742, 11768, 11779, 11837, 12069, 12322, 12431, 12438, 12440, 12612, 12737, 12750, 12773, 12792, 12876, 12879, 12916, 13082, 13084, 13257, 13260, 13277, 13318, 13323, 13347, 13396, 13414, 13417, 13419, 13420, 13446, 13458, 13527, 13534, 13548, 13564, 13576, 13606, 13627, 13637, 13671, 13692, 13725, 13733, 13752, 13790, 13993, 13995, 14030, 14342, 14357, 14412, 14419, 14631, 14635, 14654, 14710, 14739, 14757, 14780, 14809, 14819, 14825, 14826, 14874, 14905, 14950, 14951, 14976, 15033, 15228, 15342, 15369, 15372, 15373, 15375, 15408, 15450, 15452, 15453, 15456, 15470, 15549, 15795, 15799, 15962, 16137, 16168, 16181, 16198, 16211, 16226, 16292, 16409, 16544, 16727, 16732, 16770, 16774, 16777, 16780, 16787, 16844, 16876, 16902, 17012, 17040, 17043, 17047, 17055, 17070, 17072, 17075, 17170, 17172, 17188, 17222, 17249, 17259, 17272, 17305, 17402, 17409, 17432, 17461, 17573, 17681, 17874, 17893, 17934, 17966, 17970, 18138, 18163, 18222, 18375, 18403, 18417, 18449, 18469, 18507, 18597, 18682, 18731, 18915, 18961, 19024, 19027, 19034, 19039, 19134, 19157, 19191, 19353, 19405, 19432, 19495, 19508, 19525, 19566, 19588, 19662, 19683, 19751, 19898, 20056, 20061, 20075, 20231, 20379, 20621, 20764, 20860, 20911, 20986, 21123, 21276, 21508, 21536, 21547, 21572, 21575, 21577]

innovations [247, 3192, 5230, 5386, 7051, 8483, 16128]

in (no matches in the compressed version)

telecommunications [225, 279, 493, 524, 604, 718, 1233, 1319, 1380, 1683, 1687, 1703, 2009, 2010, 2118, 2247, 2255, 2597, 2702, 2792, 2812, 2814, 3021, 3170, 3731, 3754, 3779, 3835, 3849, 3905, 3935, 4089, 4098, 4266, 4395, 4526, 4552, 4676, 4699, 4784, 4886, 4982, 5088, 5124, 5433, 5587, 5643, 5891, 6090, 6428, 6429, 6848, 6925, 6926, 6932, 7135, 7194, 7232, 7289, 7290, 7615, 7737, 7765, 8027, 8084, 8265, 8268, 8287, 8352, 8512, 8517, 8569, 8651, 8695, 8698, 9072, 9154, 9180, 9256, 9387, 9415, 9663, 9732, 9755, 9760, 9819, 9954, 9976, 10005, 10269, 10278, 10288, 10311, 10455, 10490, 10563, 10630, 10689, 10721, 10771, 10797, 10905, 10938, 10939, 10951, 11009, 11198, 11202, 11285, 11287, 11366, 11391, 11397, 11447, 11583, 11712, 11806, 11810, 11889, 11985, 12025, 12026, 12039, 12143, 12188, 12216, 12409, 12454, 12459, 12468, 12518, 12602, 12635, 12678, 12942, 13034, 13037, 13045, 13075, 13117, 13240, 13295, 13649, 13692, 13993, 14096, 14111, 14315, 14594, 14737, 14944, 15075, 15110, 15173, 15325, 15372, 15644, 15685, 16095, 16344, 16440, 16481, 16496, 16570, 16605, 16747, 17112, 17305, 17324, 17706, 17752, 17768, 17920, 17949, 17951, 17995, 18379, 18478, 18579, 18636, 18640, 18883, 19253, 19321, 19488, 19535, 19937, 19955, 20240, 20292, 21009, 21147, 21294, 21371, 21466, 21550]